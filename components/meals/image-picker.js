"use client"
import { useRef, useState } from "react"
import classes from "./image-picker.module.css"
import Image from "next/image"
export default function ImagePicker({ label, name }) {
	const [pickedImage, setPickedImage] = useState()
	const imageInputRef = useRef()
	const handlePickClick = () => {
		imageInputRef.current.click()
	}
	const handleImageChange = (event) => {
		// an array of all the picked files
		const file = event.target.files[0]
		if (!file) {
			setPickedImage(null)
			return
		}
		const fileReader = new FileReader()
		// we get hold of that data URL that's being generated by assigning a value to the on load property
		// of this file reader object. So we store a function as a value in on load,
		// and this function will then be triggered by the file reader
		// once this method here, this read as data URL method, is done,
		fileReader.onload = () => {
			setPickedImage(fileReader.result)
		}
		fileReader.readAsDataURL(file)
	}
	return (
		<div className={classes.picker}>
			<label htmlFor={name}>{label}</label>
			<div className={classes.controls}>
				<div className={classes.preview}>
					{!pickedImage && <p>No image picked yet.</p>}
					{pickedImage && (
						<Image
							src={pickedImage}
							alt='The image selected by the user.'
							fill
						/>
					)}
				</div>
				<input
					className={classes.input}
					type='file'
					id='image'
					accept='image/png, image/jpeg'
					name={name}
					ref={imageInputRef}
					onChange={handleImageChange}
					required
				/>
				<button
					className={classes.button}
					type='button'
					onClick={handlePickClick}
				>
					Pick an image
				</button>
			</div>
		</div>
	)
}
